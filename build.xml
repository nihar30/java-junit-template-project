<?xml version="1.0"?>   
<project name="java-junit-template-project" default="test" basedir="." xmlns:sonar="antlib:org.sonar.ant">
  <property name="main.build.dir" value="build/main" />  
  <property name="main.src.dir" value="src" />
  <property name="test.build.dir" value="build/test" />
  <property name="test.src.dir" value="test" />
  
  
  <!-- Define the SonarQube global properties (the most usual way is to pass these properties via the command line) -->
	<property name="sonar.host.url" value="http://20.106.158.209:9000/" />

	<!-- Define the Sonar properties -->
	<property name="sonar.projectKey" value="Sample-ANT" />
	<property name="sonar.projectName" value="Sample-ANT" />
	<property name="sonar.projectVersion" value="1.0" />
	<property name="sonar.sources" value="src" />
	<property name="sonar.binaries" value="target" />
	<property name="sonar.sourceEncoding" value="UTF-8" />

  <path id="classpath.base" />

  <path id="classpath.test">
    <pathelement location="lib/junit-4.12.jar" />
    <pathelement location="lib/hamcrest-core-1.3.jar" />
    <pathelement location="lib/sonarqube-ant-task-2.7.1.1951.jar" />
    <pathelement location="${main.build.dir}"/>
    <path refid="classpath.base" />
  </path>

  <target name="test" depends="run, clean" /> 

  <target name="compile">
    <mkdir dir="${main.build.dir}"/>
    <javac srcdir="${main.src.dir}" destdir="${main.build.dir}" includeantruntime="false">
      <classpath refid="classpath.base"/>
    </javac>
  </target>

  <target name="build" depends="compile">
    <mkdir dir="${test.build.dir}"/>
    <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
        <classpath refid="classpath.test"/>
    </javac>
    <echo message="Build done" />
  </target>
   
  <!-- Test and build all files  -->
  <!-- To run this: use "ant" (default) or "ant run" -->
  <target name="run" depends="build">
    <junit printsummary="on" haltonfailure="yes">
        <classpath>
          <path refid="classpath.test" />
          <pathelement location="${test.build.dir}"/>
        </classpath>
        <formatter type="xml"/>
        <batchtest>
            <fileset dir="${test.src.dir}" includes="**/*Test*.java" />
        </batchtest>
    </junit>
  </target>
<!--   <target name="test-reports" depends="run">
      <mkdir dir="reports"/>
      <mkdir dir="reports/raw"/>
      <mkdir dir="reports/html/"/>
        <junitreport todir="reports">
            <fileset dir="./">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="noframes" todir="reports/html/" />
        </junitreport>
    </target>  -->
  
  <!-- ========= Define SonarQube Scanner for Ant Target ========= -->
  
  	<target name="sonar">
		<taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
			<!-- Update the following line, or put the "sonar-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
			<classpath path="${basedir}/lib/sonarqube-ant-task-*.jar" />
		</taskdef>
		
		<!-- Execute SonarQube Scanner for Ant Analysis -->
<!-- 		<sonar:sonar /> -->
	
        </sonar:sonar>
	</target>
  
<!-- <target name="unittest">
  <mkdir dir="reports"/>
  <mkdir dir="reports/raw"/>
  <mkdir dir="reports/html/"/>
    <junit printsummary="yes" haltonfailure="yes" showoutput="yes">
      <classpath>
       <pathelement location="${build.dir}/classes"/>
             <fileset dir="${basedir}">
                 <include name="lib/*.jar" />
             </fileset>
         </classpath>
          <test name="com.dineshonjava.algo.AppTestCases" todir="reports/raw"/>
      <formatter type="xml"/>
    </junit>
 </target>  -->
  
   
  
  <!-- delete all class files -->
  <!-- To run this: use "ant clean" -->
  <target name="clean">
    <delete>
        <fileset dir="${basedir}" includes="**/*.class" />
    </delete>
    <echo message="clean done" />
  </target>
</project>
